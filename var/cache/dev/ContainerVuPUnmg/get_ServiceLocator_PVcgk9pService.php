<?php

namespace ContainerVuPUnmg;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_PVcgk9pService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.pVcgk9p' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.pVcgk9p'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\MealController::getMealsByCategory' => ['privates', '.service_locator.xecBI9D.App\\Controller\\MealController::getMealsByCategory()', 'getMealControllergetMealsByCategoryService', true],
            'App\\Controller\\MealController::getMeals' => ['privates', '.service_locator.xecBI9D.App\\Controller\\MealController::getMeals()', 'getMealControllergetMealsService', true],
            'App\\Controller\\MealController::getCategories' => ['privates', '.service_locator.DFJhAfZ.App\\Controller\\MealController::getCategories()', 'getMealControllergetCategoriesService', true],
            'App\\Controller\\MealPlanController::getMealPlans' => ['privates', '.service_locator.4dGOqE1.App\\Controller\\MealPlanController::getMealPlans()', 'getMealPlanControllergetMealPlansService', true],
            'App\\Controller\\MealPlanController::updateMealPlan' => ['privates', '.service_locator._JFbWo0.App\\Controller\\MealPlanController::updateMealPlan()', 'getMealPlanControllerupdateMealPlanService', true],
            'App\\Controller\\OrderController::getOrders' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getOrders()', 'getOrderControllergetOrdersService', true],
            'App\\Controller\\OrderController::getOrdersByUserId' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getOrdersByUserId()', 'getOrderControllergetOrdersByUserIdService', true],
            'App\\Controller\\OrderController::getUserOrders' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getUserOrders()', 'getOrderControllergetUserOrdersService', true],
            'App\\Controller\\OrderController::updateOrderStatus' => ['privates', '.service_locator.UJVqneq.App\\Controller\\OrderController::updateOrderStatus()', 'getOrderControllerupdateOrderStatusService', true],
            'App\\Controller\\OrderController::deleteOrder' => ['privates', '.service_locator.UJVqneq.App\\Controller\\OrderController::deleteOrder()', 'getOrderControllerdeleteOrderService', true],
            'App\\Controller\\OrderController::newOrder' => ['privates', '.service_locator.a7do2E..App\\Controller\\OrderController::newOrder()', 'getOrderControllernewOrderService', true],
            'App\\Controller\\RegisterController::register' => ['privates', '.service_locator.w3SIYbB.App\\Controller\\RegisterController::register()', 'getRegisterControllerregisterService', true],
            'App\\Controller\\RegisterController::verifyEmail' => ['privates', '.service_locator.P.blNFL.App\\Controller\\RegisterController::verifyEmail()', 'getRegisterControllerverifyEmailService', true],
            'App\\Controller\\RegisterController::sendVerificationEmail' => ['privates', '.service_locator.UfqNAr8.App\\Controller\\RegisterController::sendVerificationEmail()', 'getRegisterControllersendVerificationEmailService', true],
            'App\\Controller\\UserController::getUsers' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUsers()', 'getUserControllergetUsersService', true],
            'App\\Controller\\UserController::getUserById' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UserController::user' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::user()', 'getUserControlleruserService', true],
            'App\\Controller\\UserController::getUserDetails' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUserDetails()', 'getUserControllergetUserDetailsService', true],
            'App\\Controller\\UserController::updateDetailsById' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateDetailsById()', 'getUserControllerupdateDetailsByIdService', true],
            'App\\Controller\\UserController::updateDetails' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateDetails()', 'getUserControllerupdateDetailsService', true],
            'App\\Controller\\UserController::updateUserDetails' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateUserDetails()', 'getUserControllerupdateUserDetailsService', true],
            'App\\Controller\\UserController::updateUserRoles' => ['privates', '.service_locator.W3Uq0oo.App\\Controller\\UserController::updateUserRoles()', 'getUserControllerupdateUserRolesService', true],
            'App\\Controller\\UserController::delete' => ['privates', '.service_locator.W3Uq0oo.App\\Controller\\UserController::delete()', 'getUserControllerdeleteService', true],
            'App\\Controller\\UserController::changePassword' => ['privates', '.service_locator.__CzQUd.App\\Controller\\UserController::changePassword()', 'getUserControllerchangePasswordService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\MealController:getMealsByCategory' => ['privates', '.service_locator.xecBI9D.App\\Controller\\MealController::getMealsByCategory()', 'getMealControllergetMealsByCategoryService', true],
            'App\\Controller\\MealController:getMeals' => ['privates', '.service_locator.xecBI9D.App\\Controller\\MealController::getMeals()', 'getMealControllergetMealsService', true],
            'App\\Controller\\MealController:getCategories' => ['privates', '.service_locator.DFJhAfZ.App\\Controller\\MealController::getCategories()', 'getMealControllergetCategoriesService', true],
            'App\\Controller\\MealPlanController:getMealPlans' => ['privates', '.service_locator.4dGOqE1.App\\Controller\\MealPlanController::getMealPlans()', 'getMealPlanControllergetMealPlansService', true],
            'App\\Controller\\MealPlanController:updateMealPlan' => ['privates', '.service_locator._JFbWo0.App\\Controller\\MealPlanController::updateMealPlan()', 'getMealPlanControllerupdateMealPlanService', true],
            'App\\Controller\\OrderController:getOrders' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getOrders()', 'getOrderControllergetOrdersService', true],
            'App\\Controller\\OrderController:getOrdersByUserId' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getOrdersByUserId()', 'getOrderControllergetOrdersByUserIdService', true],
            'App\\Controller\\OrderController:getUserOrders' => ['privates', '.service_locator.zXOlprV.App\\Controller\\OrderController::getUserOrders()', 'getOrderControllergetUserOrdersService', true],
            'App\\Controller\\OrderController:updateOrderStatus' => ['privates', '.service_locator.UJVqneq.App\\Controller\\OrderController::updateOrderStatus()', 'getOrderControllerupdateOrderStatusService', true],
            'App\\Controller\\OrderController:deleteOrder' => ['privates', '.service_locator.UJVqneq.App\\Controller\\OrderController::deleteOrder()', 'getOrderControllerdeleteOrderService', true],
            'App\\Controller\\OrderController:newOrder' => ['privates', '.service_locator.a7do2E..App\\Controller\\OrderController::newOrder()', 'getOrderControllernewOrderService', true],
            'App\\Controller\\RegisterController:register' => ['privates', '.service_locator.w3SIYbB.App\\Controller\\RegisterController::register()', 'getRegisterControllerregisterService', true],
            'App\\Controller\\RegisterController:verifyEmail' => ['privates', '.service_locator.P.blNFL.App\\Controller\\RegisterController::verifyEmail()', 'getRegisterControllerverifyEmailService', true],
            'App\\Controller\\RegisterController:sendVerificationEmail' => ['privates', '.service_locator.UfqNAr8.App\\Controller\\RegisterController::sendVerificationEmail()', 'getRegisterControllersendVerificationEmailService', true],
            'App\\Controller\\UserController:getUsers' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUsers()', 'getUserControllergetUsersService', true],
            'App\\Controller\\UserController:getUserById' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UserController:user' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::user()', 'getUserControlleruserService', true],
            'App\\Controller\\UserController:getUserDetails' => ['privates', '.service_locator.zXOlprV.App\\Controller\\UserController::getUserDetails()', 'getUserControllergetUserDetailsService', true],
            'App\\Controller\\UserController:updateDetailsById' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateDetailsById()', 'getUserControllerupdateDetailsByIdService', true],
            'App\\Controller\\UserController:updateDetails' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateDetails()', 'getUserControllerupdateDetailsService', true],
            'App\\Controller\\UserController:updateUserDetails' => ['privates', '.service_locator.xHvYH7o.App\\Controller\\UserController::updateUserDetails()', 'getUserControllerupdateUserDetailsService', true],
            'App\\Controller\\UserController:updateUserRoles' => ['privates', '.service_locator.W3Uq0oo.App\\Controller\\UserController::updateUserRoles()', 'getUserControllerupdateUserRolesService', true],
            'App\\Controller\\UserController:delete' => ['privates', '.service_locator.W3Uq0oo.App\\Controller\\UserController::delete()', 'getUserControllerdeleteService', true],
            'App\\Controller\\UserController:changePassword' => ['privates', '.service_locator.__CzQUd.App\\Controller\\UserController::changePassword()', 'getUserControllerchangePasswordService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\MealController::getMealsByCategory' => '?',
            'App\\Controller\\MealController::getMeals' => '?',
            'App\\Controller\\MealController::getCategories' => '?',
            'App\\Controller\\MealPlanController::getMealPlans' => '?',
            'App\\Controller\\MealPlanController::updateMealPlan' => '?',
            'App\\Controller\\OrderController::getOrders' => '?',
            'App\\Controller\\OrderController::getOrdersByUserId' => '?',
            'App\\Controller\\OrderController::getUserOrders' => '?',
            'App\\Controller\\OrderController::updateOrderStatus' => '?',
            'App\\Controller\\OrderController::deleteOrder' => '?',
            'App\\Controller\\OrderController::newOrder' => '?',
            'App\\Controller\\RegisterController::register' => '?',
            'App\\Controller\\RegisterController::verifyEmail' => '?',
            'App\\Controller\\RegisterController::sendVerificationEmail' => '?',
            'App\\Controller\\UserController::getUsers' => '?',
            'App\\Controller\\UserController::getUserById' => '?',
            'App\\Controller\\UserController::user' => '?',
            'App\\Controller\\UserController::getUserDetails' => '?',
            'App\\Controller\\UserController::updateDetailsById' => '?',
            'App\\Controller\\UserController::updateDetails' => '?',
            'App\\Controller\\UserController::updateUserDetails' => '?',
            'App\\Controller\\UserController::updateUserRoles' => '?',
            'App\\Controller\\UserController::delete' => '?',
            'App\\Controller\\UserController::changePassword' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\MealController:getMealsByCategory' => '?',
            'App\\Controller\\MealController:getMeals' => '?',
            'App\\Controller\\MealController:getCategories' => '?',
            'App\\Controller\\MealPlanController:getMealPlans' => '?',
            'App\\Controller\\MealPlanController:updateMealPlan' => '?',
            'App\\Controller\\OrderController:getOrders' => '?',
            'App\\Controller\\OrderController:getOrdersByUserId' => '?',
            'App\\Controller\\OrderController:getUserOrders' => '?',
            'App\\Controller\\OrderController:updateOrderStatus' => '?',
            'App\\Controller\\OrderController:deleteOrder' => '?',
            'App\\Controller\\OrderController:newOrder' => '?',
            'App\\Controller\\RegisterController:register' => '?',
            'App\\Controller\\RegisterController:verifyEmail' => '?',
            'App\\Controller\\RegisterController:sendVerificationEmail' => '?',
            'App\\Controller\\UserController:getUsers' => '?',
            'App\\Controller\\UserController:getUserById' => '?',
            'App\\Controller\\UserController:user' => '?',
            'App\\Controller\\UserController:getUserDetails' => '?',
            'App\\Controller\\UserController:updateDetailsById' => '?',
            'App\\Controller\\UserController:updateDetails' => '?',
            'App\\Controller\\UserController:updateUserDetails' => '?',
            'App\\Controller\\UserController:updateUserRoles' => '?',
            'App\\Controller\\UserController:delete' => '?',
            'App\\Controller\\UserController:changePassword' => '?',
        ]);
    }
}
